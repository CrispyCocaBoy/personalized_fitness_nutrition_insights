services:
  fake_user:
    build:
      context: .
      dockerfile: ./src/consumer_data_generator/Dockerfile
    container_name: fake_user
    volumes:
      - fake_generator_output:/app/output
    depends_on:
      - postgres


  streamlit_app:
    build: ./src/frontend
    ports:
      - "8501:8501"
    volumes:
      - ./src/frontend:/app
    working_dir: /app

  bpm_producer:
    build:
      context: .                                  # la root del progetto
      dockerfile: src/sensors/bpm_producer/Dockerfile
    container_name: bpm_producer
    depends_on:
      - mqtt_broker

  mqtt_broker:
    image: eclipse-mosquitto
    container_name: mqtt_broker
    ports:
      - "1883:1883"
    volumes:
      - ./mosquitto/config:/mosquitto/config

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"     # interfaccia S3
      - "9001:9001"     # console web
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"

  postgres:
    image: postgres:15
    container_name: user_device_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: user_device_db # contiene le demografiche
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
    volumes:
      - mongodb_data:/data/db


volumes:
  minio_data:
  pgdata:
  mongodb_data:
  fake_generator_output: