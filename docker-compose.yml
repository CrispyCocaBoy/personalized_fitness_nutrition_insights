services:
  streamlit_app:
    build: .
    container_name: streamlit_app
    ports:
      - "8501:8501"
    volumes:
      - .:/app
    working_dir: /app/src/frontend   # <-- directory principale impostata qui
    command: >
      streamlit run app.py --server.port=8501 --server.address=0.0.0.0
    depends_on:
      - postgres

  bpm_producer:
    build: .
    container_name: bpm_producer
    command: python src/sensors/bpm_producer.py
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      - mqtt_broker

  querying:
    build: .
    container_name: querying
    command: python database/users_profile/querying.py
    volumes:
      - .:/app
    working_dir: /app

  bpm_consumer:
    build: .
    container_name: bpm_consumer
    volumes:
      - .:/app
    working_dir: /app
    command: python src/data_ingestion/bronze/sensors_consumers/bpm_consumer.py
    depends_on:
      - mqtt_broker
      - minio

  mqtt_broker:
    image: eclipse-mosquitto
    container_name: mqtt_broker
    ports:
      - "1883:1883"
    volumes:
      - ./mosquitto/config:/mosquitto/config

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"     # interfaccia S3
      - "9001:9001"     # console web
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"

  postgres:
    image: postgres:15
    container_name: users_profile_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: users_profile # contiene le demografiche
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
    volumes:
      - mongodb_data:/data/db


volumes:
  minio_data:
  pgdata:
  mongodb_data:


