actions {
  kafka_producer {
    read {
      connector = data_to_kafka
      enable = true
      parameters {
        buffer {
          memory_overload_protection = false
          mode = memory
          per_partition_limit = 2GB
          segment_bytes = 100MB
        }
        compression = no_compression
        kafka_ext_headers = []
        kafka_header_value_encode_mode = none
        max_batch_bytes = 896KB
        max_inflight = 10
        message {
          key = "${payload.user_id}"
          timestamp = "${payload.timestamp}"
          value = "${payload}"
        }
        partition_count_refresh_interval = 60s
        partition_strategy = random
        partitions_limit = all_partitions
        query_mode = async
        required_acks = all_isr
        sync_query_timeout = 5s
        topic = wearables.bpm
      }
      resource_opts {health_check_interval = 15s}
    }
  }
}
connectors {
  kafka_producer {
    data_to_kafka {
      authentication = none
      bootstrap_hosts = "kafka:9092"
      connect_timeout = 5s
      metadata_request_timeout = 5s
      min_metadata_refresh_interval = 3s
      resource_opts {health_check_interval = 15s, start_timeout = 5s}
      socket_opts {
        nodelay = true
        recbuf = 1MB
        sndbuf = 1MB
        tcp_keepalive = none
      }
      ssl {enable = false, verify = verify_peer}
    }
  }
}
rule_engine {
  ignore_sys_message = true
  jq_function_default_timeout = 10s
  rules {
    rule_o3e9 {
      actions = [
        "kafka_producer:read"
      ]
      description = ""
      enable = true
      metadata {created_at = 1747262601085}
      sql = """~
        SELECT payload FROM "wearables/#"
      ~"""
    }
  }
}
topic_metrics = [
  {topic = "wearables/bpm"}
]
